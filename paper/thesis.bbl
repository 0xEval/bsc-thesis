\begin{thebibliography}{10}

\bibitem{solar_returnintolib_1997}
SolarDesigner, ``Return-into-lib(c) exploits.''
  \url{http://seclists.org/bugtraq/1997/Aug/63}, August 10, 1997.

\bibitem{shacham_rop_2007}
H.~Shacham, ``The geometry of innocent flesh on the bone: Return-into-libc
  without function calls (on the {x86}),'' in {\em Proceedings of CCS 2007}
  (S.~De~Capitani~di Vimercati and P.~Syverson, eds.), pp.~552--61, ACM Press,
  Oct. 2007.

\bibitem{roemer_return-oriented_2012}
R.~Roemer, E.~Buchanan, H.~Shacham, and S.~Savage, ``Return-{Oriented}
  {Programming}: {Systems}, {Languages}, and {Applications},'' {\em ACM
  Transactions on Information and System Security}, vol.~15, pp.~1--34, Mar.
  2012.

\bibitem{domas_movfuscator}
C.~Domas, ``M/o/vfuscator, the single instruction compiler.''
  \url{http://www.github.com/xoreaxeaxeax/movfuscator}.

\bibitem{dolan_mov_2013}
S.~Dolan, ``mov is turing-complete.''
  \url{http://www.cl.cam.ac.uk/~sd601/papers/mov.pdfA}, July 19, 2013.

\bibitem{DBLP:journals/iee/MouzaraniSZ16}
M.~Mouzarani, B.~Sadeghiyan, and M.~Zolfaghari, ``Smart fuzzing method for
  detecting stack-based buffer overflow in binary codes,'' {\em {IET}
  Software}, vol.~10, no.~4, pp.~96--107, 2016.

\bibitem{DBLP:journals/iee/PadmanabhuniT16}
B.~M. Padmanabhuni and H.~B.~K. Tan, ``Auditing buffer overflow vulnerabilities
  using hybrid static-dynamic analysis,'' {\em {IET} Software}, vol.~10, no.~2,
  pp.~54--61, 2016.

\bibitem{DBLP:conf/ant/LeonB16}
E.~Leon and S.~D. Bruda, ``Counter-measures against stack buffer overflows in
  gnu/linux operating systems,'' in {\em The 7th International Conference on
  Ambient Systems, Networks and Technologies {(ANT} 2016) / The 6th
  International Conference on Sustainable Energy Information Technology
  {(SEIT-2016)} / Affiliated Workshops, May 23-26, 2016, Madrid, Spain},
  pp.~1301--1306, 2016.

\bibitem{one_stacksmashing_1996}
AlephOne, ``Smashing the stack for fun and profit.''
  \url{http://insecure.org/stf/smashstack.html}, November 08, 1996.

\bibitem{mulder_subject_2016}
B.~Mulder, ``On the subject of {Control} {Flow} {Integrity}: {A} comparative
  literature study,'' Feb. 2016.

\bibitem{barthe_pshape:_2016}
A.~Follner, A.~Bartel, H.~Peng, Y.-C. Chang, K.~Ispoglou, M.~Payer, and
  E.~Bodden, ``{PSHAPE}: {Automatically} {Combining} {Gadgets} for {Arbitrary}
  {Method} {Execution},'' in {\em Security and {Trust} {Management}}
  (G.~Barthe, E.~Markatos, and P.~Samarati, eds.), vol.~9871, pp.~212--228,
  Cham: Springer International Publishing, 2016.
\newblock DOI: 10.1007/978-3-319-46598-2\_15.

\bibitem{sashs_ropper}
S.~Schirra, ``Ropper.'' \url{https://github.com/sashs/Ropper}.

\bibitem{quynh_capstone}
N.~A. Quynh, ``Capstone: The ultimate disassembler.''
  \url{https://github.com/aquynh/capstone}.

\end{thebibliography}
